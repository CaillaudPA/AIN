<?php
/**
 * Created by PhpStorm.
 * User: Pierre-Antoine
 * Date: 15/11/2016
 * Time: 08:59
 */

namespace AppBundle\Entity;

use FOS\UserBundle\Model\User as BaseUser;
use Doctrine\ORM\Mapping as ORM;


/**
 * @ORM\Entity
 * @ORM\Table(name="fos_user")
 */
class User extends BaseUser
{
    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @ORM\OneToMany(targetEntity="FacebookAccount", mappedBy="user")
     */
    private $facebookaccount;

    /**
     * @ORM\OneToMany(targetEntity="TwitterAccount", mappedBy="user")
     */
    private $twitteraccount;
    
    /**
     * @ORM\OneToMany(targetEntity="GoogleAccount", mappedBy="user")
     */
    private $googleaccount;
    
    /**
     * @ORM\OneToMany(targetEntity="YoutubeAccount", mappedBy="user")
     */
    private $youtubeacount;

    public function __construct()
    {
        parent::__construct();
        // your own logic
    }
    
    /**
     * Add facebookaccount
     *
     * @param \AppBundle\Entity\FacebookAccount $facebookaccount
     *
     * @return User
     */
    public function addFacebookaccount(\AppBundle\Entity\FacebookAccount $facebookaccount)
    {
        $this->facebookaccount[] = $facebookaccount;

        return $this;
    }

    /**
     * Remove facebookaccount
     *
     * @param \AppBundle\Entity\FacebookAccount $facebookaccount
     */
    public function removeFacebookaccount(\AppBundle\Entity\FacebookAccount $facebookaccount)
    {
        $this->facebookaccount->removeElement($facebookaccount);
    }

    /**
     * Get facebookaccount
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getFacebookaccount()
    {
        return $this->facebookaccount;
    }

    /**
     * Add twitteraccount
     *
     * @param \AppBundle\Entity\TwitterAccount $twitteraccount
     *
     * @return User
     */
    public function addTwitteraccount(\AppBundle\Entity\TwitterAccount $twitteraccount)
    {
        $this->twitteraccount[] = $twitteraccount;

        return $this;
    }

    /**
     * Remove twitteraccount
     *
     * @param \AppBundle\Entity\TwitterAccount $twitteraccount
     */
    public function removeTwitteraccount(\AppBundle\Entity\TwitterAccount $twitteraccount)
    {
        $this->twitteraccount->removeElement($twitteraccount);
    }

    /**
     * Get twitteraccount
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getTwitteraccount()
    {
        return $this->twitteraccount;
    }
}
